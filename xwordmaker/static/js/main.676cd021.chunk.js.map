{"version":3,"sources":["constants.js","XGrid.js","NewPuzzleForm.js","Toolbar.js","WordList.js","helpers.js","KeyPressHandler.js","Clues.js","Print.js","reducers/grid.js","reducers/motion.js","App.js","serviceWorker.js","index.js"],"names":["DIRECTION_ACROSS","DIRECTION_DOWN","isDirectionAcross","v","isBlockedSquare","UNDO_ACTION","REDO_ACTION","UPDATE_WORD_TO_CLUE","UPDATE_GRID","SET_CURRENT_WORD","SET_SELECTED_SQUARE","SET_CLUE_FOCUS","Grid","grid","selected","currentWord","hideAnswers","onClick","size","rows","cols","gridItems","Array","keys","map","i","row","Math","floor","column","val","classNames","push","coordinates","some","cn","join","style","fontSize","length","key","className","gridnums","gridTemplateColumns","gridTemplateRows","useStyles","makeStyles","theme","textField","marginLeft","spacing","marginRight","NewPuzzleForm","onSave","classes","React","useState","open","setOpen","values","setValues","handleClose","save","handleChange","dir","event","Object","assign","target","value","Button","aria-label","color","startIcon","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","label","onChange","type","InputLabelProps","shrink","margin","variant","inputProps","min","max","DialogActions","title","flexGrow","Toolbar","handleSavePuzzle","handleImportPuzzle","handleCreateNewPuzzle","AppBar","position","Typography","component","display","WORDLIST","memo","words","setWordsState","filtered","setFiltered","debouncedFilter","useCallback","debounce","query","filter","w","match","useEffect","fetch","process","then","resp","text","split","l","startsWith","setWords","RegExp","word","List","dense","slice","ListItem","button","coord2dTo1d","col","valFrom2d","Movement","props","right","setSelected","width","left","up","down","height","moveForward","direction","moveBack","this","KeyPressHandler","setRotationalSymettry","handleBackspace","e","movement","updateGrid","old","handleLetter","k","toUpperCase","shiftKey","handleSpace","setCurrentWord","handleLeft","handleRight","handleUp","handleDown","handleUndo","handleRedo","cloneDeep","MOVE_UP","MOVE_LEFT","MOVE_RIGHT","MOVE_DOWN","ENTER_LETTER","BACKSPACE","SPACE","UNDO","REDO","keyMap","noOutline","outline","KeyPressHandlerComponent","hasFocus","setGridFocus","kph","handlers","handleFocus","_hasFocus","forEach","cb","mousetrap","bind","unbind","ref","forwardRef","onFocus","onBlur","tabIndex","children","focused","decode","input","DOMParser","parseFromString","documentElement","textContent","Clue","clue","clueNum","trim","clueText","replace","disabled","error","focus","clsx","defaultValue","fullWidth","InputProps","onClueFocus","onClueChanged","handleUpdateWord","mapClues","d","toLowerCase","clues","answers","across","container","item","xs","PrintView","liStyle","listStyleType","mapClue","overflow","marginTop","float","columnCount","padding","MAX_HISTORY","calcNumbersAndAnswers","wordToClue","out","r","num","j","isNewDown","isNewAcross","start","reduceGridState","state","action","past","history","undo","nextState","previous","newPast","redo","reduceUndo","future","next","newFuture","reduceRedo","payload","reduceUpdateWordToClue","reduceUpdateGrid","Error","currentWordInitialState","reduceMotionState","nextSelected","nextCurrentWord","setSelectedSquare","setClueFocus","root","paddingLeft","paddingRight","paddingTop","paper","scroll","maxHeight","TabPanel","index","makePuzzle","g","author","editor","copyright","publisher","date","circles","parseWordToClue","newWordToClue","parse","reduce","acc","ww","resetGridState","JSON","localStorage","getItem","initialGridState","gridRef","createRef","ReactiveGrid","setWidth","handleResize","current","clientWidth","window","addEventListener","removeEventListener","hotKeyRef","App","useTheme","isPrint","setIsPrint","tabValue","handleTabChanged","useReducer","motionState","dispatchMotionStateUpdate","gridState","dispatchGridStateUpdate","updateWordToClue","setItem","stringify","nextCw","valFor","x","coordinatesFor","isNotEnd","end","calcCurrentWord","handleClueFocus","handleClueChanged","handleWordListClicked","gridCopy","coord","clsGridPaper","clsScrollPaper","kphProps","matchMedia","addListener","matches","onbeforeprint","onafterprint","separateGrid","useMediaQuery","breakpoints","tabs","Paper","gridComponent","_gridComponent","renderedTabs","Fragment","Tabs","nv","t","Tab","blob","Blob","saveAs","reader","FileReader","onload","result","newGrid","readAsText","files","Container","lg","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.676cd021.chunk.js","sourcesContent":["\nexport const DIRECTION_ACROSS = \"ACROSS\"\nexport const DIRECTION_DOWN = \"DOWN\"\nexport const isDirectionAcross = (v) => v === DIRECTION_ACROSS\n\n\nexport const BLOCKED_SQUARE = '.'\nexport const isBlockedSquare = (v) => v === BLOCKED_SQUARE\n\nexport const UNDO_ACTION = \"UNDO\"\nexport const REDO_ACTION = \"REDO\"\nexport const UPDATE_WORD_TO_CLUE = \"UPDATE_WORD_TO_CLUE\"\nexport const UPDATE_GRID = \"UPDATE_GRID\"\n\nexport const SET_CURRENT_WORD = \"SET_CURRENT_WORD\"\nexport const SET_SELECTED_SQUARE = \"SET_SELECTED_SQUARE\"\nexport const SET_CLUE_FOCUS = \"SET_CLUE_FOCUS\"\n\n","import React from 'react';\nimport './XGrid.css';\nimport { isBlockedSquare }  from './constants';\n\nexport default function Grid({grid, selected, currentWord, hideAnswers, onClick}) {\n  const {rows, cols} = grid.size\n  // go from 0 -> width*height and map to a block in the view\n  const gridItems = [...Array(rows*cols).keys()]\n      .map(i => {\n        const row = Math.floor(i / cols)\n        const column = Math.floor(i % cols)\n        const val =  grid.grid[i]\n        const isSelected = selected && selected.row === row && selected.column === column\n        let classNames = [\"Grid-item\"]\n        if(isSelected) {\n          classNames.push(\"Grid-item-selected\")\n        } else if (isBlockedSquare(val)) {\n          classNames.push(\"Grid-item-blocked\")\n        } else if (currentWord && currentWord.coordinates.some(i => i[0] === row && i[1] === column)) {\n          classNames.push(\"Grid-item-highlight\")\n        }\n        const cn = classNames.join(\" \")\n        const style = {\n          fontSize: `${(1/(val.length))*1.1}em`\n        }\n\n        return (\n          <div key={i} className={cn} onClick={() => onClick({row, column})}>\n            <span className=\"Grid-number\">{grid.gridnums[i] > 0 ? grid.gridnums[i] : ''}</span>\n            <span style={style}>{hideAnswers ? ' ' : val}</span>\n          </div>\n        )\n      })\n\n  return (\n    <div\n      style={{\n        gridTemplateColumns: `repeat(${cols}, 1fr)`,\n        gridTemplateRows: `repeat(${rows}, 1fr)`,\n      }}\n      className=\"Grid-container\"\n    >\n      {gridItems}\n    </div>\n  )\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(theme => ({\n  textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n}));\n\nexport default function NewPuzzleForm({onSave}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [values, setValues] = React.useState({rows: 15, cols: 15})\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (save) => () => {\n    setOpen(false);\n\n    if(save) {\n      onSave(values)\n    }\n\n  };\n\n  const handleChange = (dir) => (event) => {\n    setValues(Object.assign({}, values, {[dir]: +event.target.value || ''}))\n  }\n\n  return (\n    <div>\n        <Button\n          aria-label=\"New puzzle\"\n          color=\"inherit\"\n          startIcon={<AddIcon />}\n          onClick={handleClickOpen}\n        >\n          New Puzzle\n        </Button>\n      <Dialog open={open} onClose={handleClose(false)}>\n        <DialogTitle>Create New Puzzle</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Create a new puzzle. Warning! This will destroy the current puzzle. Make sure to save first!\n          </DialogContentText>\n          <TextField\n            label=\"Rows\"\n            value={values.rows}\n            onChange={handleChange('rows')}\n            className={classes.textField}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n            inputProps={{\n              min: 1,\n              max: 100\n            }}\n          />\n          <TextField\n            label=\"Columns\"\n            value={values.cols}\n            onChange={handleChange('cols')}\n            className={classes.textField}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            margin=\"normal\"\n            variant=\"outlined\"\n            inputProps={{\n              min: 1,\n              max: 100\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose(true)} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport NewPuzzleForm from './NewPuzzleForm'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1\n  },\n}));\n\nexport default function Toolbar({\n  handleSavePuzzle,\n  handleImportPuzzle,\n  handleCreateNewPuzzle\n}) {\n  const classes = useStyles()\n  return (\n    <AppBar position=\"static\">\n     <MuiToolbar>\n      <Typography variant=\"h6\" className={classes.title}>\n        XWordMaker\n      </Typography>\n      <Button\n        aria-label=\"Save puzzle\"\n        color=\"inherit\"\n        startIcon={<SaveAlt />}\n        onClick={handleSavePuzzle}\n      >\n        Save Puzzle\n      </Button>\n      <Button\n        aria-label=\"Load puzzle\"\n        color=\"inherit\"\n        component=\"label\"\n        startIcon={<ArrowUpwardIcon />}\n      >\n        Load Puzzle\n        <input\n          type=\"file\"\n          style={{ display: \"none\" }}\n          onChange={handleImportPuzzle}\n          />\n      </Button>\n      <NewPuzzleForm onSave={handleCreateNewPuzzle}/>\n     </MuiToolbar>\n    </AppBar>\n  )\n}\n","import React, { memo, useState, useEffect, useCallback } from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\nimport {debounce} from 'lodash';\n\nlet WORDLIST = null\n\nconst WordList = ({currentWord, onClick}) => {\n  const [words, setWordsState] = useState(WORDLIST || [])\n  const [filtered, setFiltered] = useState([])\n\n  const setWords = (words) => {\n    //cache wordlist incase component unmounts\n    WORDLIST = words\n    setWordsState(words)\n  }\n\n  const debouncedFilter = useCallback(debounce( query => {\n    setFiltered(words.filter(w => w.match(query)))\n  }, 300), [words])\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/wordlist/wordlist.txt`)\n      .then(resp => resp.text())\n      .then(text =>\n          text.split(\"\\n\")\n            .filter(l => !l.startsWith(\"#\")))\n      .then(w => setWords(w))\n  }, [])\n\n  useEffect(() => {\n    debouncedFilter(new RegExp(\"^\"+currentWord.word+\"$\", \"i\"))\n  }, [words, currentWord.word, debouncedFilter])\n\n  const max = 100\n\n  return <div>\n    Words: {filtered.length > max ? `showing ${max}/` : ''}{filtered.length}\n    <List dense>\n      {filtered.slice(0,max).map(w =>\n          <ListItem\n            button\n            onClick={() => onClick(w)}\n            key={w}>\n            {w}\n          </ListItem>\n       )}\n    </List>\n  </div>\n}\n\nexport default memo(WordList)\n","\nexport const coord2dTo1d = (grid, row, col) => (grid.size.cols*row)+col\nexport const valFrom2d = (grid, row, col) => grid.grid[coord2dTo1d(grid, row, col)]\n","import React, { useEffect, useState } from 'react';\nimport {\n  isDirectionAcross,\n  isBlockedSquare,\n  DIRECTION_ACROSS,\n  DIRECTION_DOWN,\n  BLOCKED_SQUARE,\n  UNDO_ACTION,\n  REDO_ACTION\n}  from './constants';\nimport {\ncoord2dTo1d,\nvalFrom2d\n} from './helpers';\n\nimport mousetrap from 'mousetrap'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {cloneDeep} from 'lodash';\n\n\nclass Movement {\n  constructor(props) {\n    const {selected, width, height, currentWord, setSelected} = props\n    this.width = width\n    this.height = height\n    this.selected = selected\n    this.setSelected = setSelected\n    this.currentWord = currentWord\n  }\n\n  right = () => {\n    this.setSelected({\n      row: this.selected.row,\n      column: Math.min(this.width-1, this.selected.column+1)\n    })\n  }\n\n  left = () => {\n    this.setSelected({\n      row: this.selected.row,\n      column: Math.max(0, this.selected.column-1)\n    })\n  }\n  up = () => {\n    this.setSelected({\n      row: Math.max(0, this.selected.row-1),\n      column: this.selected.column\n    })\n  }\n\n  down = () => {\n    this.setSelected({\n      row: Math.min(this.height-1, this.selected.row+1),\n      column: this.selected.column\n    })\n  }\n\n  moveForward = () => {\n    if (isDirectionAcross(this.currentWord.direction)) {\n      this.right()\n    } else {\n      this.down()\n    }\n  }\n  moveBack = () => {\n    if (isDirectionAcross(this.currentWord.direction)) {\n      this.left()\n    } else {\n      this.up()\n    }\n  }\n}\n\nclass KeyPressHandler {\n  constructor(props) {\n    this.selected = props.selected\n    this.setSelected = props.setSelected\n    this.currentWord = props.currentWord\n    this.setCurrentWord = props.setCurrentWord\n    this.grid = cloneDeep(props.grid)\n    this.updateGrid = props.updateGrid\n    this.rows = props.grid.size.rows\n    this.cols = props.grid.size.cols\n    this.movement = new Movement({\n      width: props.grid.size.cols,\n      height: props.grid.size.rows,\n      setSelected: props.setSelected,\n      currentWord: props.currentWord,\n      selected: props.selected\n    })\n  }\n\n  setRotationalSymettry = (v) => {\n    this.grid.grid[coord2dTo1d(this.grid, this.rows - this.selected.row - 1, this.cols - this.selected.column - 1)] = v\n  }\n\n  handleBackspace = (e) => {\n    const {grid, selected, movement, updateGrid} = this\n\n    const old = valFrom2d(grid, selected.row, selected.column)\n\n    if (isBlockedSquare(old)) {\n      this.setRotationalSymettry('')\n    }\n\n    grid.grid[coord2dTo1d(grid, selected.row, selected.column)] = ''\n\n    movement.moveBack()\n    updateGrid(grid)\n  }\n\n  handleLetter = (e) => {\n    let k = e.key.toUpperCase()\n    const {grid, selected, movement, updateGrid} = this\n\n    if(e.key === BLOCKED_SQUARE) {\n      grid.grid[coord2dTo1d(grid, selected.row, selected.column)] = k\n      this.setRotationalSymettry(k)\n      movement.moveForward()\n      updateGrid(grid)\n    } else if (e.shiftKey) {\n      grid.grid[coord2dTo1d(grid, selected.row, selected.column)] += k\n      updateGrid(grid)\n    } else {\n      const old = valFrom2d(grid, selected.row, selected.column)\n      if (old === k) {\n        // don't issue grid update if its the same letter\n        movement.moveForward()\n        return\n      }\n      if (isBlockedSquare(old)) {\n        this.setRotationalSymettry('')\n      }\n      grid.grid[coord2dTo1d(grid, selected.row, selected.column)] = k\n      movement.moveForward()\n      updateGrid(grid)\n    }\n  }\n\n  handleSpace = (e) => {\n    const {setCurrentWord, currentWord} = this\n    setCurrentWord(Object.assign({}, currentWord, {\n      direction: isDirectionAcross(currentWord.direction) ? DIRECTION_DOWN : DIRECTION_ACROSS\n    }))\n  }\n\n  handleLeft = () => {\n    this.movement.left()\n  }\n\n  handleRight = () => {\n    this.movement.right()\n  }\n\n  handleUp = () => {\n    this.movement.up()\n  }\n\n  handleDown = () => {\n    this.movement.down()\n  }\n\n  handleUndo = () => {\n    this.updateGrid(UNDO_ACTION)\n  }\n\n  handleRedo = () => {\n    this.updateGrid(REDO_ACTION)\n  }\n\n}\n\nconst MOVE_UP = 'MOVE_UP'\nconst MOVE_LEFT = 'MOVE_LEFT'\nconst MOVE_RIGHT = 'MOVE_RIGHT'\nconst MOVE_DOWN = 'MOVE_DOWN'\nconst ENTER_LETTER = 'ENTER_LETTER'\nconst BACKSPACE = 'BACKSPACE'\nconst SPACE = 'SPACE'\nconst UNDO = 'UNDO'\nconst REDO = 'REDO'\n\nconst keyMap = {\n  [MOVE_UP]: 'up',\n  [MOVE_DOWN]: 'down',\n  [MOVE_LEFT]: 'left',\n  [MOVE_RIGHT]: 'right',\n  [ENTER_LETTER]: \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.\".split(''),\n  [BACKSPACE]: ['del', 'backspace'],\n  [SPACE]: 'space',\n  [UNDO]: 'mod+z',\n  [REDO]: 'mod+shift+z',\n}\n\nconst useStyles = makeStyles(theme => ({\n noOutline: {\n    \"&:focus\": {\n      outline: 0,\n    }\n }\n}))\n\n\nexport default function KeyPressHandlerComponent(props) {\n  const classes = useStyles()\n\n  const [hasFocus, setGridFocus] = useState(false)\n\n  const kph = new KeyPressHandler(props)\n\n  const handlers = {\n    [MOVE_UP]: kph.handleUp,\n    [MOVE_DOWN]: kph.handleDown,\n    [MOVE_LEFT]: kph.handleLeft,\n    [MOVE_RIGHT]: kph.handleRight,\n    [ENTER_LETTER]: kph.handleLetter,\n    [BACKSPACE]: kph.handleBackspace,\n    [SPACE]: kph.handleSpace,\n    [UNDO]: kph.handleUndo,\n    [REDO]: kph.handleRedo,\n  }\n\n  const handleFocus = _hasFocus => e => {\n    setGridFocus(_hasFocus)\n  }\n\n  const withFocus = cb => (e) => hasFocus && cb(e)\n\n  useEffect(() => {\n    Object.keys(keyMap).forEach((k) => {\n      mousetrap.bind(keyMap[k], withFocus(handlers[k]))\n    })\n    return () => {\n      Object.keys(keyMap).forEach((k) => {\n        mousetrap.unbind(keyMap[k])\n      })\n    }\n  })\n\n\n  return (\n    <div ref={props.forwardRef} className={classes.noOutline} onFocus={handleFocus(true)} onBlur={handleFocus(false)} tabIndex=\"-1\">\n      {props.children}\n    </div>\n  )\n}\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport {\n  DIRECTION_ACROSS,\n  DIRECTION_DOWN,\n}  from './constants';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  // pseudo class to apply when we want to style focus\n  // withouth applying real focus\n  focused: {}\n}));\n\nexport function decode(input)\n{\n  var doc = new DOMParser().parseFromString(input, \"text/html\");\n  return doc.documentElement.textContent;\n}\n\nfunction Clue({word, clue, dir, currentWord, onClick, onBlur}) {\n  // how do i make classes generate the right name 'Mui-focused'\n  const classes = useStyles()\n  const clueNum = +clue.match(/^ *[0-9]+/)[0].trim()\n  const clueText = decode(clue.replace(/^ *[0-9]*\\. */, ''))\n  const disabled = word.match(\"_\")\n  const error = !disabled && !clueText.length\n  const focus = currentWord.clueNum === clueNum && currentWord.direction === dir\n  const className = clsx({'Mui-focused': focus})\n  return (\n      <TextField\n        label={`${clueNum}: ${word}`}\n        defaultValue={clueText}\n        type=\"text\"\n        margin=\"dense\"\n        variant=\"outlined\"\n        fullWidth\n        onClick={onClick(dir, clueNum)}\n        onBlur={onBlur(dir, word)}\n        disabled={disabled}\n        error={error}\n        InputLabelProps={{className}}\n        InputProps={{className}}\n      />\n  )\n}\n\nexport default memo(function Clues({grid, currentWord, onClueFocus, onClueChanged}) {\n    const handleFocus = (dir, clueNum) => (e) => {\n      onClueFocus(dir, clueNum)\n    }\n\n    const handleUpdateWord = (dir, word) => e => {\n      onClueChanged(dir, word, e.target.value)\n    }\n\n    const mapClues = (dir) => {\n      const d = dir.toLowerCase()\n      return grid.clues[d].map((clue, i) => {\n        const word = grid.answers[d][i]\n        return <Clue\n          key={`${d}-${i}-${word}`}\n          word={word}\n          clue={clue}\n          dir={dir}\n          currentWord={currentWord}\n            onClick={handleFocus}\n            onBlur={handleUpdateWord}\n        />\n      })\n    }\n\n    const across = mapClues(DIRECTION_ACROSS)\n    const down = mapClues(DIRECTION_DOWN)\n    return (\n      <div>\n        <Grid container spacing={1}>\n          <Grid item xs>\n            <Typography>Across</Typography>\n              {across}\n          </Grid>\n          <Grid item xs>\n            <Typography>Down</Typography>\n              {down}\n          </Grid>\n        </Grid>\n      </div>\n    )\n  })\n","import React from 'react';\n\nimport XGrid from './XGrid'\nimport {decode} from './Clues'\n\n\nexport default function PrintView({grid}) {\n  const ulStyle = {\n    width: 'calc(50vw - 40px)',\n    columnCount: 2,\n    margin: 0,\n    padding: 0,\n  }\n  const liStyle = {\n    margin: 0,\n    listStyleType: 'none',\n  }\n\n  const containerStyle = {\n    overflow: 'hidden',\n    marginTop: 40,\n    marginRight: 20,\n    marginLeft: 20,\n    height: \"calc(100vh - 40px)\",\n  }\n\n  const gridStyle = {\n    float: 'right',\n    width: '50vmin',\n    height: '50vmin'\n  }\n\n  const mapClue = (v)  => {\n    const clueNum = +v.match(/^ *[0-9]+/)[0].trim()\n    const clueText = decode(v.replace(/^ *[0-9]*\\. */, ''))\n    return (\n      <li style={liStyle} key={v}>\n        <b style={{marginRight: 2}}>{clueNum}</b>\n        {clueText}\n      </li>\n    )\n  }\n\n  /*\n      */\n  return (\n    <div style={containerStyle}>\n      <div style={gridStyle}>\n        <XGrid grid={grid} hideAnswers={true}/>\n      </div>\n      <ul style={ulStyle}>\n        <li style={liStyle}><b>ACROSS</b></li>\n        {grid.clues.across.map(mapClue)}\n        <li style={liStyle}><b>DOWN</b></li>\n        {grid.clues.down.map(mapClue)}\n      </ul>\n    </div>\n  )\n}\n","import {\n  isBlockedSquare,\n  UNDO_ACTION,\n  REDO_ACTION,\n  UPDATE_WORD_TO_CLUE,\n  UPDATE_GRID,\n}  from '../constants';\n\nimport { coord2dTo1d, valFrom2d } from '../helpers';\n\nconst MAX_HISTORY = 25\n\nfunction calcNumbersAndAnswers(grid, wordToClue) {\n  const {rows, cols} = grid.size\n  let out = {\n    gridnums: grid.grid.map(r => 0), // clone grid\n    answers: {down: [], across: []},\n    clues: {down: [], across: []}\n  }\n\n  let num = 1;\n  for (let i=0; i<rows; ++i){\n    for (let j=0; j<cols; ++j) {\n      if (isBlockedSquare(valFrom2d(grid, i, j))) continue;\n\n      const isNewDown = (i === 0 || isBlockedSquare(valFrom2d(grid,i-1,j))) && !(i === rows || isBlockedSquare(valFrom2d(grid,i+1,j)))\n      const isNewAcross = (j === 0 || isBlockedSquare(valFrom2d(grid,i,j-1))) && !(j === cols || isBlockedSquare(valFrom2d(grid,i,j+1)))\n      if(isNewAcross || isNewDown) {\n        out.gridnums[coord2dTo1d(grid, i, j)] = num++;\n      }\n\n      if(isNewAcross) {\n        let currentWord = \"\"\n        let start = j;\n        while(!isBlockedSquare(valFrom2d(grid,i,start)) && start < cols) {\n          let w = valFrom2d(grid, i, start)\n          currentWord += w ? w : '_'\n          start++\n        }\n        out.answers.across.push(currentWord)\n        let clue = wordToClue[currentWord] || ''\n        out.clues.across.push(`${num-1}. ${clue}`)\n      }\n\n      if(isNewDown) {\n        let currentWord = \"\"\n        let start = i;\n        while(!isBlockedSquare(valFrom2d(grid,start,j)) && start < rows) {\n          let w = valFrom2d(grid, start, j)\n          currentWord += w ? w : '_'\n          start++\n        }\n        out.answers.down.push(currentWord)\n        let clue = wordToClue[currentWord] || ''\n        out.clues.down.push(`${num-1}. ${clue}`)\n      }\n\n    }\n  }\n\n  return out;\n}\n\nfunction reduceUndo(state, action) {\n  const past = state.history.undo\n\n  if (!past.length) {\n    return state\n  }\n\n  const nextState = {...state}\n  const previous = past[past.length - 1]\n  const newPast = past.slice(0, past.length - 1)\n  nextState.grid = previous\n  nextState.history = {\n    undo: newPast,\n    redo: [state.grid, ...state.history.redo]\n  }\n\n  return nextState\n}\n\nfunction reduceRedo(state, action) {\n  const future = state.history.redo\n\n  if (!future.length) {\n    return state\n  }\n\n  const nextState = {...state}\n  const next = future[0]\n  const newFuture = future.slice(1)\n  nextState.grid = next\n  nextState.history = {\n    undo: [...state.history.undo, state.grid],\n    redo: newFuture\n  }\n\n  return nextState\n}\n\nfunction reduceUpdateWordToClue(state, action) {\n  const wordToClue = {\n    ...state.wordToClue,\n    ...action.payload,\n  }\n\n  const ns = {\n    ...state,\n    grid: {\n      ...state.grid,\n      // Update clues in grid model when the clues change\n      ...calcNumbersAndAnswers(state.grid, wordToClue)\n    },\n    wordToClue\n  }\n  return ns\n}\n\nfunction reduceUpdateGrid(state, action) {\n  const nextState = {...state, ...action.payload}\n  nextState.grid = {...nextState.grid, ...calcNumbersAndAnswers(nextState.grid, nextState.wordToClue)}\n  // since history gets pushed on the the stack slice off the start of the history to keep the size small enough\n  nextState.history.undo = state.history.undo.slice(-MAX_HISTORY)\n  nextState.history.undo.push(state.grid)\n  nextState.history.redo = []\n\n  return nextState\n}\n\nexport function reduceGridState(state, action) {\n  switch(action.type) {\n    case UNDO_ACTION:\n      return reduceUndo(state, action)\n    case REDO_ACTION:\n      return reduceRedo(state, action)\n    case UPDATE_WORD_TO_CLUE:\n      return reduceUpdateWordToClue(state, action)\n    case UPDATE_GRID:\n      return reduceUpdateGrid(state, action)\n    default:\n      throw new Error('Unknown Action Type: ' + action.type)\n  }\n}\n","import {\n  isDirectionAcross,\n  DIRECTION_ACROSS,\n  DIRECTION_DOWN,\n  SET_CURRENT_WORD,\n  SET_SELECTED_SQUARE,\n  SET_CLUE_FOCUS\n}  from '../constants';\n\n\nfunction setCurrentWord(state, action) {\n  return {\n    ...state,\n    currentWord: {\n      ...state.currentWord,\n      ...action.payload\n    }\n  }\n}\n\nfunction setSelectedSquare(state, action) {\n  const {currentWord, selected} = state\n  const nextSelected = action.payload\n  let nextCurrentWord = currentWord\n\n  //swap direction if selected is double clicked\n  if(nextSelected && selected && nextSelected.row === selected.row && nextSelected.column === selected.column) {\n    nextCurrentWord = {\n      ...nextCurrentWord,\n      direction: isDirectionAcross(currentWord.direction) ? DIRECTION_DOWN : DIRECTION_ACROSS\n    }\n  }\n\n  return {\n    ...state,\n    selected: nextSelected,\n    currentWord: nextCurrentWord\n  }\n}\n\nfunction setClueFocus(state, action) {\n  const {direction, selected} = action.payload\n  return {\n    ...state,\n    currentWord: {\n      ...currentWordInitialState(),\n      direction,\n    },\n    selected,\n  }\n}\n\nexport function currentWordInitialState() {\n  return {word: \"\", direction: DIRECTION_ACROSS, coordinates: []}\n}\n\nexport function reduceMotionState(state, action) {\n  switch(action.type) {\n    case SET_CURRENT_WORD:\n      return setCurrentWord(state, action)\n    case SET_SELECTED_SQUARE:\n      return setSelectedSquare(state, action)\n    case SET_CLUE_FOCUS:\n      return setClueFocus(state, action)\n    default:\n      throw new Error('Unknown Action Type: ' + action.type)\n  }\n}\n","import React, { useState, useReducer, useEffect, useCallback } from 'react';\nimport clsx from 'clsx';\nimport './App.css';\nimport XGrid from './XGrid'\nimport Toolbar from './Toolbar'\nimport WordList from './WordList'\nimport KeyPressHandler from './KeyPressHandler'\nimport Clues from './Clues'\nimport PrintView from './Print'\nimport {\n  isDirectionAcross,\n  isBlockedSquare,\n  UNDO_ACTION,\n  REDO_ACTION,\n  UPDATE_WORD_TO_CLUE,\n  UPDATE_GRID,\n  SET_CURRENT_WORD,\n  SET_SELECTED_SQUARE,\n  SET_CLUE_FOCUS,\n}  from './constants';\n\nimport { coord2dTo1d, valFrom2d } from './helpers';\nimport { reduceGridState } from './reducers/grid'\nimport { reduceMotionState, currentWordInitialState } from './reducers/motion'\n\n\nimport { saveAs } from 'file-saver';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport {cloneDeep } from 'lodash';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n  },\n  title: {\n    flexGrow: 1\n  },\n  container: {\n    paddingLeft: 12,\n    paddingRight: 12,\n    paddingTop: 32,\n  },\n  paper: {\n    padding: 10,\n  },\n  scroll: {\n    overflow: \"scroll\",\n    maxHeight: \"calc(100vh - 180px)\",\n  }\n}));\n\n\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index } = props;\n\n  let hidden = value !== index\n\n  if (hidden) {\n    return <div></div>\n  }\n\n  return <div>\n    {children}\n  </div>\n}\n\n\n\nfunction calcCurrentWord({direction, grid, selected}) {\n    if (!selected) { return null }\n\n    const valFor = (x) => isDirectionAcross(direction) ? valFrom2d(grid, selected.row, x) : valFrom2d(grid, x, selected.column)\n    const coordinatesFor = (x) => isDirectionAcross(direction) ? [selected.row, x] : [x, selected.column]\n    const isNotEnd = (end) => isDirectionAcross(direction) ? end < grid.size.cols : end < grid.size.rows\n\n    let start = isDirectionAcross(direction) ? selected.column : selected.row;\n    let end = start\n\n    // Find beginning\n    // Then find end of the word\n    // When convert those values into an string and convert blanks to . for word search\n    // also compile list of coordinates for grid highlighting\n    //  finally set the new state\n    while(start>0 && !isBlockedSquare(valFor(start))) start--;\n    while(isNotEnd(end) && !isBlockedSquare(valFor(end))) end++;\n    if (isBlockedSquare(valFor(start))) start++;\n\n    let word = \"\"\n    let coordinates = []\n    const clueNum = grid.gridnums[coord2dTo1d(grid, coordinatesFor(start)[0], coordinatesFor(start)[1])]\n\n    for(let i=start; i<end; ++i) {\n      let v = valFor(i)\n      if (v === \"\") v = \".\";\n      word += v\n      coordinates.push(coordinatesFor(i))\n    }\n\n    return { word, coordinates, clueNum }\n}\n\n// Format specified by https://www.xwordinfo.com/JSON/\nconst makePuzzle = (size) => {\n  let g = {\n    title: \"TODO: NY Times, Thu, Sep 11, 2008\",\n    author: \"TODO: Caleb Madison\",\n    editor: \"TODO: Will Shortz\",\n    copyright: \"TODO: 2008, The New York Times\",\n    publisher: \"TODO: The New York Times\",\n    date: \"TODO: 9/11/2008\",\n    size,\n    // clues should include number as well e.g. \"1. Waxed\"\n    clues: {\n      across: [],\n      down: []\n    }\n  }\n  return Object.assign(g, {\n    // '.' means black, multiple letters valid for rebus\n    grid: [...Array(g.size.rows*g.size.cols).keys()].map(v => \"\"),\n    // 0 means no number\n    gridnums: [...Array(g.size.rows*g.size.cols).keys()].map(v => 0),\n    // TODO: 0 means circle 1 means circle\n    circles: [...Array(g.size.rows*g.size.cols).keys()].map(v => 0),\n  })\n}\n\nfunction parseWordToClue(grid) {;\n  const newWordToClue = {}\n  if (grid.answers) {\n    const parse = dir => {\n      grid.answers[dir]\n      .filter(w => !w.match('_'))\n      .reduce((acc, w, i) => {\n        let ww = (grid.clues[dir][i] || '').replace(/^ *[0-9]*\\. */, '')\n        acc[w] = ww\n        return acc\n      }, newWordToClue)\n    }\n\n    parse('down')\n    parse('across')\n  }\n\n  return newWordToClue\n}\n\nfunction resetGridState(g) {\n    const grid = g || JSON.parse(localStorage.getItem(\"grid\")) || makePuzzle({rows: 15, cols: 15})\n    const wordToClue = parseWordToClue(grid)\n    const history = JSON.parse(localStorage.getItem(\"history\")) || {undo: [], redo: []}\n\n    return {grid, wordToClue, history}\n}\n\nconst initialGridState = resetGridState()\n\n\nconst gridRef = React.createRef();\nfunction ReactiveGrid({children}) {\n  let [width, setWidth] = useState(\"100%\")\n\n  const handleResize = () => {\n    gridRef.current && setWidth(gridRef.current.clientWidth)\n  }\n\n  useEffect(() => {\n    // add event listener then call function on first render to ensure size is correct\n    window.addEventListener('resize', handleResize)\n    handleResize()\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return (\n    <div ref={gridRef} style={{width: width, height: width}}>\n      {children}\n    </div>\n  )\n}\n\nconst hotKeyRef = React.createRef()\n\n\nfunction App() {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [isPrint, setIsPrint] = useState(false)\n  const [tabValue, handleTabChanged] = useState(0)\n  const [motionState, dispatchMotionStateUpdate] = useReducer(reduceMotionState, {selected: null, currentWord: currentWordInitialState()})\n  const [gridState, dispatchGridStateUpdate] = useReducer(reduceGridState, initialGridState)\n  const {grid, history} = gridState\n\n  const {selected, currentWord} = motionState\n\n  const updateGridState = (nextState) => {\n    if (nextState === UNDO_ACTION || nextState === REDO_ACTION) {\n      dispatchGridStateUpdate({type: nextState})\n    } else {\n      dispatchGridStateUpdate({\n        type: UPDATE_GRID,\n        payload: {grid: nextState}\n      })\n    }\n  }\n\n  const updateWordToClue = useCallback((word, clue) => {\n    dispatchGridStateUpdate({\n      type: UPDATE_WORD_TO_CLUE,\n      payload: {\n        [word]: clue\n      }\n    })\n  }, [])\n\n  const setCurrentWord = useCallback((currentWord) => {\n    dispatchMotionStateUpdate({\n      type: SET_CURRENT_WORD,\n      payload: currentWord\n    })\n  }, [])\n\n  const setSelected = useCallback((nextSelected) => {\n    dispatchMotionStateUpdate({\n      type: SET_SELECTED_SQUARE,\n      payload: nextSelected\n    })\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"grid\", JSON.stringify(grid))\n    localStorage.setItem(\"history\", JSON.stringify(history))\n  }, [grid, history])\n\n  useEffect(() => {\n    const nextCw = calcCurrentWord({selected, direction: currentWord.direction, grid})\n    nextCw && setCurrentWord(nextCw)\n  }, [setCurrentWord, selected, grid, currentWord.direction])\n\n\n\n  const handleClueFocus = useCallback((direction, clueNum) => {\n    let selected = {}\n    for(let i=0; i<grid.gridnums.length; ++i) {\n      if(grid.gridnums[i] == clueNum) {\n        const row = Math.floor(i / grid.size.cols)\n        const column = Math.floor(i % grid.size.cols)\n        selected = {\n          row, column\n        }\n        break;\n      }\n    }\n    dispatchMotionStateUpdate({\n      type: SET_CLUE_FOCUS,\n      payload: {\n        direction,\n        selected\n      }\n    })\n  }, [grid])\n\n  const handleClueChanged = useCallback((direction, word, clue) => {\n    updateWordToClue(word, clue)\n  }, [updateWordToClue])\n\n  const handleSavePuzzle = () => {\n    var blob = new Blob([JSON.stringify(grid)], {type: \"text/plain;charset=utf-8\"});\n    saveAs(blob, \"puzzle.json\")\n  }\n\n  // TODO handle failure and validate puzzle format\n  const handleImportPuzzle = (e) => {\n    let input = e.target;\n    if (!input.value) {\n      return;\n    }\n\n    let reader = new FileReader();\n    reader.onload = function(){\n      let text = reader.result;\n      const newGrid = JSON.parse(text)\n      dispatchGridStateUpdate({\n        type: UPDATE_GRID,\n        payload: {\n          grid: newGrid,\n          wordToClue: parseWordToClue(newGrid)\n        }\n      })\n    };\n\n    reader.readAsText(input.files[0]);\n    input.value = '';\n  }\n\n  const handleCreateNewPuzzle = (size) => {\n    dispatchGridStateUpdate({\n      type: UPDATE_GRID,\n      payload: resetGridState(makePuzzle(size))\n    })\n    setSelected()\n  }\n\n  const handleWordListClicked = useCallback(word => {\n    const gridCopy = cloneDeep(grid)\n\n    currentWord.coordinates.forEach((coord, i) => {\n      gridCopy.grid[coord2dTo1d(grid, coord[0], coord[1])] = word[i]\n    })\n\n    hotKeyRef.current.focus()\n\n    dispatchGridStateUpdate({\n      type: UPDATE_GRID,\n      payload: {grid: gridCopy}\n    })\n  }, [grid, currentWord])\n\n\n  const clsGridPaper = clsx(classes.paper)\n  const clsScrollPaper = clsx(classes.paper, classes.scroll)\n\n  const kphProps = {\n    selected,\n    setSelected,\n    setCurrentWord,\n    currentWord,\n    grid,\n    updateGrid: updateGridState,\n    forwardRef: hotKeyRef,\n  }\n\n  useEffect(() => {\n    const listener = (e) => setIsPrint(e.matches)\n    window.matchMedia(\"print\").addListener(listener)\n    window.onbeforeprint = () => setIsPrint(true)\n    window.onafterprint = () => setIsPrint(false)\n  }, [])\n\n  const separateGrid = useMediaQuery(theme.breakpoints.up('lg'))\n\n  if (isPrint) {\n    return <PrintView grid={grid} />\n  }\n\n  let tabs = [\n    {label: \"Word List\", children: (\n      <Paper className={clsScrollPaper} >\n        <WordList onClick={handleWordListClicked} currentWord={currentWord}/>\n      </Paper>\n    )},\n    {label: \"Clues\", children: (\n      <Paper className={clsScrollPaper} >\n        <Clues currentWord={currentWord} grid={grid} onClueFocus={handleClueFocus} onClueChanged={handleClueChanged}/>\n      </Paper>\n    )},\n  ]\n\n  let gridComponent = null\n\n  const _gridComponent = (\n    <KeyPressHandler {...kphProps}>\n      <Paper className={clsGridPaper} >\n        <ReactiveGrid>\n          <XGrid grid={grid} selected={motionState.selected} currentWord={motionState.currentWord} onClick={setSelected} />\n        </ReactiveGrid>\n      </Paper>\n    </KeyPressHandler>\n  )\n\n  if (separateGrid) {\n    gridComponent = _gridComponent\n  } else {\n    tabs = [{label: \"Grid\", children: _gridComponent}, ...tabs]\n  }\n\n  const renderedTabs = (\n    <React.Fragment>\n      <Tabs value={tabValue} onChange={(e,nv) => handleTabChanged(nv)}>\n        {tabs.map(t => <Tab key={t.label} label={t.label}/>)}\n      </Tabs>\n      {tabs.map((t,i) => <TabPanel key={t.label} value={tabValue} index={i}>{t.children}</TabPanel>)}\n    </React.Fragment>\n  )\n\n  return (\n    <div className=\"App\">\n      <Toolbar\n        handleSavePuzzle={handleSavePuzzle}\n        handleImportPuzzle={handleImportPuzzle}\n        handleCreateNewPuzzle={handleCreateNewPuzzle}\n      />\n      <Container className={classes.container}>\n        <Grid container spacing={2}>\n        { separateGrid && (\n          <Grid item lg={6} >\n            {gridComponent}\n          </Grid>\n        )}\n          <Grid item lg={6}>\n            {renderedTabs}\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}